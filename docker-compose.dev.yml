# Development Docker Compose - Infrastructure Only
# Run: docker-compose -f docker-compose.dev.yml up -d
# Then run API and BlazorApp locally with dotnet run

services:
  sql-server-dev:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: configmanager-sqlserver-dev
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=ConfigManager123!
      - MSSQL_PID=Express
    ports:
      - "1435:1433"
    volumes:
      - sqlserver_data_dev:/var/opt/mssql
    networks:
      - configmanager-network-dev
    healthcheck:
      test: ["CMD-SHELL", "timeout 10s bash -c '</dev/tcp/localhost/1433'"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  mongo-dev:
    image: mongo:7.0
    container_name: configmanager-mongo-dev
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=ConfigManager123!
    ports:
      - "27019:27017"
    volumes:
      - mongo_data_dev:/data/db
    networks:
      - configmanager-network-dev
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  rabbitmq-dev:
    image: rabbitmq:3.12-management
    container_name: configmanager-rabbitmq-dev
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=ConfigManager123!
    ports:
      - "5674:5672"    # AMQP port
      - "15674:15672"  # Management UI port
    volumes:
      - rabbitmq_data_dev:/var/lib/rabbitmq
    networks:
      - configmanager-network-dev
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  api-dev:
    build:
      context: .
      dockerfile: src/Api/Dockerfile
      target: development
    container_name: configmanager-api-dev
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5021
      - ConnectionStrings__DefaultConnection=Server=sql-server-dev,1433;Database=ConfigurationManager;User Id=sa;Password=ConfigManager123!;TrustServerCertificate=true;
      - ConnectionStrings__MongoConnection=mongodb://admin:ConfigManager123!@mongo-dev:27017/ConfigurationManager?authSource=admin
      - RabbitMQ__Host=rabbitmq-dev
      - RabbitMQ__Username=admin
      - RabbitMQ__Password=ConfigManager123!
      - JwtSettings__SecretKey=your-super-secret-jwt-key-that-is-at-least-32-characters-long
      - JwtSettings__Issuer=ConfigurationManager
      - JwtSettings__Audience=ConfigurationManager
      - JwtSettings__AccessTokenExpirationMinutes=15
      - JwtSettings__RefreshTokenExpirationDays=7
    ports:
      - "5021:5021"
    depends_on:
      sql-server-dev:
        condition: service_healthy
      mongo-dev:
        condition: service_healthy
      rabbitmq-dev:
        condition: service_healthy
    networks:
      - configmanager-network-dev
    volumes:
      - ./src:/app/src:ro
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5021/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  blazorapp-dev:
    build:
      context: .
      dockerfile: src/BlazorApp/Dockerfile
      target: development
    container_name: configmanager-blazorapp-dev
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5216
      - ApiSettings__BaseUrl=http://api-dev:5021
    ports:
      - "5216:5216"
    depends_on:
      api-dev:
        condition: service_healthy
    networks:
      - configmanager-network-dev
    volumes:
      - ./src:/app/src:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5216/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  sqlserver_data_dev:
  mongo_data_dev:
  rabbitmq_data_dev:

networks:
  configmanager-network-dev:
    driver: bridge
